import org.elasticsearch.gradle.LoggedExec
import org.elasticsearch.gradle.internal.info.BuildParams

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
apply plugin: 'elasticsearch.internal-yaml-rest-test'
apply plugin: 'elasticsearch.internal-cluster-test'

esplugin {
  description 'The Azure Classic Discovery plugin allows to use Azure Classic API for the unicast discovery mechanism'
  classname 'org.elasticsearch.plugin.discovery.azure.classic.AzureDiscoveryPlugin'
}

def localVersions = versions + [
  'azure' : '0.9.3',
  'jersey': '1.13'
]

dependencies {
  api "com.microsoft.azure:azure-svc-mgmt-compute:${localVersions.azure}"
  api "com.microsoft.azure:azure-core:${localVersions.azure}"
  api "org.apache.httpcomponents:httpclient:${localVersions.httpclient}"
  api "org.apache.httpcomponents:httpcore:${localVersions.httpcore}"
  api "commons-logging:commons-logging:${localVersions.commonslogging}"
  api "org.apache.logging.log4j:log4j-1.2-api:${localVersions.log4j}"
  api "commons-codec:commons-codec:${localVersions.commonscodec}"
  api "commons-lang:commons-lang:2.6"
  api "commons-io:commons-io:2.4"
  api 'javax.mail:mail:1.4.5'
  api 'javax.inject:javax.inject:1'
  api "com.sun.jersey:jersey-client:${localVersions.jersey}"
  api "com.sun.jersey:jersey-core:${localVersions.jersey}"
  api "com.sun.jersey:jersey-json:${localVersions.jersey}"
  api 'org.codehaus.jettison:jettison:1.1'
  api 'com.sun.xml.bind:jaxb-impl:2.2.3-1'
  api 'org.codehaus.jackson:jackson-core-asl:1.9.2'
  api 'org.codehaus.jackson:jackson-mapper-asl:1.9.2'
  api 'org.codehaus.jackson:jackson-jaxrs:1.9.2'
  api 'org.codehaus.jackson:jackson-xc:1.9.2'

  // HACK: javax.xml.bind was removed from default modules in java 9, so we pull the api in here,
  // and whitelist this hack in JarHell
  api 'javax.xml.bind:jaxb-api:2.2.2'

  runtimeOnly "joda-time:joda-time:2.10.10"
}

restResources {
  restApi {
    include '_common', 'cluster', 'nodes'
  }
}

// needed to be consistent with ssl host checking
String host = InetAddress.getLoopbackAddress().getHostAddress()

// location of keystore and files to generate it
File keystore = new File(project.buildDir, 'keystore/test-node.jks')

// generate the keystore
TaskProvider createKey = tasks.register("createKey", LoggedExec) {
  doFirst {
    delete(keystore.parentFile)
    keystore.parentFile.mkdirs()
  }
  outputs.file(keystore).withPropertyName('keystoreFile')
  executable = "${BuildParams.runtimeJavaHome}/bin/keytool"
  standardInput = new ByteArrayInputStream('FirstName LastName\nUnit\nOrganization\nCity\nState\nNL\nyes\n\n'.getBytes('UTF-8'))
  args '-genkey',
    '-alias', 'test-node',
    '-keystore', keystore,
    '-keyalg', 'RSA',
    '-keysize', '2048',
    '-validity', '712',
    '-dname', 'CN=' + host,
    '-keypass', 'keypass',
    '-storepass', 'keypass'
}
//no unit tests
tasks.named("test").configure { enabled = false }
// add keystore to test classpath: it expects it there
tasks.named("processInternalClusterTestResources").configure {
  from createKey
}

normalization {
  runtimeClasspath {
    ignore 'test-node.jks'
  }
}

tasks.named("dependencyLicenses").configure {
  mapping from: /azure-.*/, to: 'azure'
  mapping from: /jackson-.*/, to: 'jackson'
  mapping from: /jersey-.*/, to: 'jersey'
  mapping from: /jaxb-.*/, to: 'jaxb'
}

tasks.named("thirdPartyAudit").configure {
  ignoreMissingClasses(
          'javax.activation.ActivationDataFlavor',
          'javax.activation.DataContentHandler',
          'javax.activation.DataHandler',
          'javax.activation.DataSource',
          'javax.activation.FileDataSource',
          'javax.activation.FileTypeMap',
          'javax.activation.MimeType',
          'javax.activation.MimeTypeParseException',
          'javax.servlet.ServletContextEvent',
          'javax.servlet.ServletContextListener',
          'org.apache.avalon.framework.logger.Logger',
          'org.apache.log.Hierarchy',
          'org.apache.log.Logger',
          'javax.jms.Message',
          'org.eclipse.persistence.descriptors.ClassDescriptor',
          'org.eclipse.persistence.internal.oxm.MappingNodeValue',
          'org.eclipse.persistence.internal.oxm.TreeObjectBuilder',
          'org.eclipse.persistence.internal.oxm.XPathFragment',
          'org.eclipse.persistence.internal.oxm.XPathNode',
          'org.eclipse.persistence.internal.queries.ContainerPolicy',
          'org.eclipse.persistence.jaxb.JAXBContext',
          'org.eclipse.persistence.jaxb.JAXBHelper',
          'org.eclipse.persistence.mappings.DatabaseMapping',
          'org.eclipse.persistence.mappings.converters.TypeConversionConverter',
          'org.eclipse.persistence.mappings.foundation.AbstractCompositeDirectCollectionMapping',
          'org.eclipse.persistence.oxm.XMLContext',
          'org.eclipse.persistence.oxm.XMLDescriptor',
          'org.eclipse.persistence.oxm.XMLField',
          'org.eclipse.persistence.oxm.mappings.XMLCompositeCollectionMapping',
          'org.eclipse.persistence.sessions.DatabaseSession',
          'org.jvnet.fastinfoset.VocabularyApplicationData',
          'org.jvnet.staxex.Base64Data',
          'org.jvnet.staxex.XMLStreamReaderEx',
          'org.jvnet.staxex.XMLStreamWriterEx',
          'org.osgi.framework.Bundle',
          'org.osgi.framework.BundleActivator',
          'org.osgi.framework.BundleContext',
          'org.osgi.framework.BundleEvent',
          'org.osgi.framework.SynchronousBundleListener',
          'com.sun.xml.fastinfoset.stax.StAXDocumentParser',
          'com.sun.xml.fastinfoset.stax.StAXDocumentSerializer',
      'org.apache.logging.log4j.Level',
      'org.apache.logging.log4j.LogManager',
      'org.apache.logging.log4j.Logger',
      'org.apache.logging.log4j.Marker',
      'org.apache.logging.log4j.ThreadContext',
      'org.apache.logging.log4j.ThreadContext$ContextStack',
      'org.apache.logging.log4j.core.Appender',
      'org.apache.logging.log4j.core.ErrorHandler',
      'org.apache.logging.log4j.core.Filter',
      'org.apache.logging.log4j.core.Filter$Result',
      'org.apache.logging.log4j.core.Layout',
      'org.apache.logging.log4j.core.LifeCycle$State',
      'org.apache.logging.log4j.core.LogEvent',
      'org.apache.logging.log4j.core.Logger',
      'org.apache.logging.log4j.core.LoggerContext',
      'org.apache.logging.log4j.core.appender.AbstractAppender',
      'org.apache.logging.log4j.core.appender.AsyncAppender',
      'org.apache.logging.log4j.core.appender.AsyncAppender$Builder',
      'org.apache.logging.log4j.core.appender.ConsoleAppender',
      'org.apache.logging.log4j.core.appender.ConsoleAppender$Builder',
      'org.apache.logging.log4j.core.appender.ConsoleAppender$Target',
      'org.apache.logging.log4j.core.appender.FileAppender',
      'org.apache.logging.log4j.core.appender.FileAppender$Builder',
      'org.apache.logging.log4j.core.appender.NullAppender',
      'org.apache.logging.log4j.core.appender.RollingFileAppender',
      'org.apache.logging.log4j.core.appender.RollingFileAppender$Builder',
      'org.apache.logging.log4j.core.appender.SocketAppender',
      'org.apache.logging.log4j.core.appender.SocketAppender$Builder',
      'org.apache.logging.log4j.core.appender.rewrite.RewriteAppender',
      'org.apache.logging.log4j.core.appender.rewrite.RewritePolicy',
      'org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy',
      'org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy',
      'org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder',
      'org.apache.logging.log4j.core.appender.rolling.SizeBasedTriggeringPolicy',
      'org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy',
      'org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy$Builder',
      'org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy',
      'org.apache.logging.log4j.core.config.AbstractConfiguration',
      'org.apache.logging.log4j.core.config.AppenderRef',
      'org.apache.logging.log4j.core.config.Configuration',
      'org.apache.logging.log4j.core.config.ConfigurationFactory',
      'org.apache.logging.log4j.core.config.ConfigurationScheduler',
      'org.apache.logging.log4j.core.config.ConfigurationSource',
      'org.apache.logging.log4j.core.config.LoggerConfig',
      'org.apache.logging.log4j.core.config.Property',
      'org.apache.logging.log4j.core.config.Reconfigurable',
      'org.apache.logging.log4j.core.config.builder.api.AppenderComponentBuilder',
      'org.apache.logging.log4j.core.config.builder.api.ComponentBuilder',
      'org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder',
      'org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilderFactory',
      'org.apache.logging.log4j.core.config.builder.api.LayoutComponentBuilder',
      'org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder',
      'org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder',
      'org.apache.logging.log4j.core.config.builder.impl.DefaultConfigurationBuilder',
      'org.apache.logging.log4j.core.config.plugins.util.PluginManager',
      'org.apache.logging.log4j.core.config.plugins.util.PluginType',
      'org.apache.logging.log4j.core.config.status.StatusConfiguration',
      'org.apache.logging.log4j.core.filter.AbstractFilter',
      'org.apache.logging.log4j.core.filter.AbstractFilterable',
      'org.apache.logging.log4j.core.filter.CompositeFilter',
      'org.apache.logging.log4j.core.filter.DenyAllFilter',
      'org.apache.logging.log4j.core.filter.DenyAllFilter$Builder',
      'org.apache.logging.log4j.core.filter.LevelMatchFilter',
      'org.apache.logging.log4j.core.filter.LevelMatchFilter$Builder',
      'org.apache.logging.log4j.core.filter.LevelRangeFilter',
      'org.apache.logging.log4j.core.filter.StringMatchFilter',
      'org.apache.logging.log4j.core.filter.StringMatchFilter$Builder',
      'org.apache.logging.log4j.core.filter.ThresholdFilter',
      'org.apache.logging.log4j.core.impl.Log4jLogEvent',
      'org.apache.logging.log4j.core.impl.Log4jLogEvent$Builder',
      'org.apache.logging.log4j.core.impl.ThrowableProxy',
      'org.apache.logging.log4j.core.layout.AbstractStringLayout',
      'org.apache.logging.log4j.core.layout.ByteBufferDestination',
      'org.apache.logging.log4j.core.layout.Encoder',
      'org.apache.logging.log4j.core.layout.HtmlLayout',
      'org.apache.logging.log4j.core.layout.HtmlLayout$Builder',
      'org.apache.logging.log4j.core.layout.PatternLayout',
      'org.apache.logging.log4j.core.layout.PatternLayout$Builder',
      'org.apache.logging.log4j.core.layout.SyslogLayout',
      'org.apache.logging.log4j.core.layout.SyslogLayout$Builder',
      'org.apache.logging.log4j.core.layout.XmlLayout',
      'org.apache.logging.log4j.core.layout.XmlLayout$Builder',
      'org.apache.logging.log4j.core.lookup.StrSubstitutor',
      'org.apache.logging.log4j.core.net.Facility',
      'org.apache.logging.log4j.core.net.Protocol',
      'org.apache.logging.log4j.core.pattern.LogEventPatternConverter',
      'org.apache.logging.log4j.core.time.Instant',
      'org.apache.logging.log4j.core.time.MutableInstant',
      'org.apache.logging.log4j.core.tools.BasicCommandLineArguments',
      'org.apache.logging.log4j.core.tools.picocli.CommandLine',
      'org.apache.logging.log4j.core.util.Loader',
      'org.apache.logging.log4j.core.util.OptionConverter',
      'org.apache.logging.log4j.core.util.Throwables',
      'org.apache.logging.log4j.core.util.Transform',
      'org.apache.logging.log4j.message.MapMessage',
      'org.apache.logging.log4j.message.Message',
      'org.apache.logging.log4j.spi.AbstractLoggerAdapter',
      'org.apache.logging.log4j.spi.ExtendedLogger',
      'org.apache.logging.log4j.spi.LoggerContext',
      'org.apache.logging.log4j.spi.MutableThreadContextStack',
      'org.apache.logging.log4j.spi.StandardLevel',
      'org.apache.logging.log4j.status.StatusLogger',
      'org.apache.logging.log4j.util.BiConsumer',
      'org.apache.logging.log4j.util.Constants',
      'org.apache.logging.log4j.util.LoaderUtil',
      'org.apache.logging.log4j.util.PropertiesUtil',
      'org.apache.logging.log4j.util.ReadOnlyStringMap',
      'org.apache.logging.log4j.util.Strings',
      'org.apache.logging.log4j.util.TriConsumer'


  )
}

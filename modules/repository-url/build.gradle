/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

import org.elasticsearch.gradle.PropertyNormalization

apply plugin: 'elasticsearch.internal-yaml-rest-test'
apply plugin: 'elasticsearch.yaml-rest-compat-test'
apply plugin: 'elasticsearch.internal-cluster-test'
apply plugin: 'elasticsearch.test.fixtures'

final Project fixture = project(':test:fixtures:url-fixture')

esplugin {
  description 'Module for URL repository'
  classname 'org.elasticsearch.plugin.repository.url.URLRepositoryPlugin'
}

restResources {
  restApi {
    include '_common', 'cluster', 'nodes', 'indices', 'index', 'bulk', 'count', 'snapshot'
  }
}

dependencies {
  api "org.apache.httpcomponents:httpclient:${versions.httpclient}"
  api "org.apache.httpcomponents:httpcore:${versions.httpcore}"
  api "commons-logging:commons-logging:${versions.commonslogging}"
  api "commons-codec:commons-codec:${versions.commonscodec}"
  api "org.apache.logging.log4j:log4j-1.2-api:${versions.log4j}"
}

tasks.named("thirdPartyAudit").configure {
  ignoreMissingClasses(
    'javax.servlet.ServletContextEvent',
    'javax.servlet.ServletContextListener',
    'org.apache.avalon.framework.logger.Logger',
    'org.apache.log.Hierarchy',
    'org.apache.log.Logger',
    'javax.jms.Message',
      'org.apache.logging.log4j.Level',
      'org.apache.logging.log4j.LogManager',
      'org.apache.logging.log4j.Logger',
      'org.apache.logging.log4j.Marker',
      'org.apache.logging.log4j.ThreadContext',
      'org.apache.logging.log4j.ThreadContext$ContextStack',
      'org.apache.logging.log4j.core.Appender',
      'org.apache.logging.log4j.core.ErrorHandler',
      'org.apache.logging.log4j.core.Filter',
      'org.apache.logging.log4j.core.Filter$Result',
      'org.apache.logging.log4j.core.Layout',
      'org.apache.logging.log4j.core.LifeCycle$State',
      'org.apache.logging.log4j.core.LogEvent',
      'org.apache.logging.log4j.core.Logger',
      'org.apache.logging.log4j.core.LoggerContext',
      'org.apache.logging.log4j.core.appender.AbstractAppender',
      'org.apache.logging.log4j.core.appender.AsyncAppender',
      'org.apache.logging.log4j.core.appender.AsyncAppender$Builder',
      'org.apache.logging.log4j.core.appender.ConsoleAppender',
      'org.apache.logging.log4j.core.appender.ConsoleAppender$Builder',
      'org.apache.logging.log4j.core.appender.ConsoleAppender$Target',
      'org.apache.logging.log4j.core.appender.FileAppender',
      'org.apache.logging.log4j.core.appender.FileAppender$Builder',
      'org.apache.logging.log4j.core.appender.NullAppender',
      'org.apache.logging.log4j.core.appender.RollingFileAppender',
      'org.apache.logging.log4j.core.appender.RollingFileAppender$Builder',
      'org.apache.logging.log4j.core.appender.SocketAppender',
      'org.apache.logging.log4j.core.appender.SocketAppender$Builder',
      'org.apache.logging.log4j.core.appender.rewrite.RewriteAppender',
      'org.apache.logging.log4j.core.appender.rewrite.RewritePolicy',
      'org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy',
      'org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy',
      'org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy$Builder',
      'org.apache.logging.log4j.core.appender.rolling.SizeBasedTriggeringPolicy',
      'org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy',
      'org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy$Builder',
      'org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy',
      'org.apache.logging.log4j.core.config.AbstractConfiguration',
      'org.apache.logging.log4j.core.config.AppenderRef',
      'org.apache.logging.log4j.core.config.Configuration',
      'org.apache.logging.log4j.core.config.ConfigurationFactory',
      'org.apache.logging.log4j.core.config.ConfigurationScheduler',
      'org.apache.logging.log4j.core.config.ConfigurationSource',
      'org.apache.logging.log4j.core.config.LoggerConfig',
      'org.apache.logging.log4j.core.config.Property',
      'org.apache.logging.log4j.core.config.Reconfigurable',
      'org.apache.logging.log4j.core.config.builder.api.AppenderComponentBuilder',
      'org.apache.logging.log4j.core.config.builder.api.ComponentBuilder',
      'org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder',
      'org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilderFactory',
      'org.apache.logging.log4j.core.config.builder.api.LayoutComponentBuilder',
      'org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder',
      'org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder',
      'org.apache.logging.log4j.core.config.builder.impl.DefaultConfigurationBuilder',
      'org.apache.logging.log4j.core.config.plugins.util.PluginManager',
      'org.apache.logging.log4j.core.config.plugins.util.PluginType',
      'org.apache.logging.log4j.core.config.status.StatusConfiguration',
      'org.apache.logging.log4j.core.filter.AbstractFilter',
      'org.apache.logging.log4j.core.filter.AbstractFilterable',
      'org.apache.logging.log4j.core.filter.CompositeFilter',
      'org.apache.logging.log4j.core.filter.DenyAllFilter',
      'org.apache.logging.log4j.core.filter.DenyAllFilter$Builder',
      'org.apache.logging.log4j.core.filter.LevelMatchFilter',
      'org.apache.logging.log4j.core.filter.LevelMatchFilter$Builder',
      'org.apache.logging.log4j.core.filter.LevelRangeFilter',
      'org.apache.logging.log4j.core.filter.StringMatchFilter',
      'org.apache.logging.log4j.core.filter.StringMatchFilter$Builder',
      'org.apache.logging.log4j.core.filter.ThresholdFilter',
      'org.apache.logging.log4j.core.impl.Log4jLogEvent',
      'org.apache.logging.log4j.core.impl.Log4jLogEvent$Builder',
      'org.apache.logging.log4j.core.impl.ThrowableProxy',
      'org.apache.logging.log4j.core.layout.AbstractStringLayout',
      'org.apache.logging.log4j.core.layout.ByteBufferDestination',
      'org.apache.logging.log4j.core.layout.Encoder',
      'org.apache.logging.log4j.core.layout.HtmlLayout',
      'org.apache.logging.log4j.core.layout.HtmlLayout$Builder',
      'org.apache.logging.log4j.core.layout.PatternLayout',
      'org.apache.logging.log4j.core.layout.PatternLayout$Builder',
      'org.apache.logging.log4j.core.layout.SyslogLayout',
      'org.apache.logging.log4j.core.layout.SyslogLayout$Builder',
      'org.apache.logging.log4j.core.layout.XmlLayout',
      'org.apache.logging.log4j.core.layout.XmlLayout$Builder',
      'org.apache.logging.log4j.core.lookup.StrSubstitutor',
      'org.apache.logging.log4j.core.net.Facility',
      'org.apache.logging.log4j.core.net.Protocol',
      'org.apache.logging.log4j.core.pattern.LogEventPatternConverter',
      'org.apache.logging.log4j.core.time.Instant',
      'org.apache.logging.log4j.core.time.MutableInstant',
      'org.apache.logging.log4j.core.tools.BasicCommandLineArguments',
      'org.apache.logging.log4j.core.tools.picocli.CommandLine',
      'org.apache.logging.log4j.core.util.Loader',
      'org.apache.logging.log4j.core.util.OptionConverter',
      'org.apache.logging.log4j.core.util.Throwables',
      'org.apache.logging.log4j.core.util.Transform',
      'org.apache.logging.log4j.message.MapMessage',
      'org.apache.logging.log4j.message.Message',
      'org.apache.logging.log4j.spi.AbstractLoggerAdapter',
      'org.apache.logging.log4j.spi.ExtendedLogger',
      'org.apache.logging.log4j.spi.LoggerContext',
      'org.apache.logging.log4j.spi.MutableThreadContextStack',
      'org.apache.logging.log4j.spi.StandardLevel',
      'org.apache.logging.log4j.status.StatusLogger',
      'org.apache.logging.log4j.util.BiConsumer',
      'org.apache.logging.log4j.util.Constants',
      'org.apache.logging.log4j.util.LoaderUtil',
      'org.apache.logging.log4j.util.PropertiesUtil',
      'org.apache.logging.log4j.util.ReadOnlyStringMap',
      'org.apache.logging.log4j.util.Strings',
      'org.apache.logging.log4j.util.TriConsumer'

  )
}

testFixtures.useFixture(fixture.path, 'url-fixture')

def fixtureAddress = { fixtureName ->
  int ephemeralPort = fixture.postProcessFixture.ext."test.fixtures.${fixtureName}.tcp.80"
  assert ephemeralPort > 0
  'http://127.0.0.1:' + ephemeralPort
}

File repositoryDir = fixture.fsRepositoryDir as File

testClusters.configureEach {
  // repositoryDir is used by a FS repository to create snapshots
  setting 'path.repo', "${repositoryDir.absolutePath}", PropertyNormalization.IGNORE_VALUE
  // repositoryDir is used by two URL repositories to restore snapshots
  setting 'repositories.url.allowed_urls', {
    "http://snapshot.test*,${fixtureAddress('url-fixture')}"
  }, PropertyNormalization.IGNORE_VALUE
}

